name: Test Module

on:
  pull_request:
    paths:
      - '*.tf'
      - 'tests/**'
      - 'examples/**'
      - '.github/workflows/terraform-test.yml'
  workflow_dispatch:

env:
  AWS_REGION: 'ap-southeast-1'
  TF_VERSION: '1.6.0'
  GO_VERSION: '1.21'

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init (Main Module)
        run: terraform init -backend=false

      - name: Terraform Validate (Main Module)
        run: terraform validate

      - name: Terraform Init (Test Example)
        run: |
          cd examples/postgresql-test
          terraform init -backend=false

      - name: Terraform Validate (Test Example)
        run: |
          cd examples/postgresql-test
          terraform validate

  lint:
    name: Lint Go Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download Go Dependencies
        run: |
          cd tests
          go mod download

      - name: Run Go Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          working-directory: tests

  test:
    name: Run Full Test Suite
    runs-on: ubuntu-latest
    needs: [validate, lint]
    environment: testing
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download Go Dependencies
        run: |
          cd tests
          go mod download

      - name: Run All Tests
        run: |
          cd tests
          go test -v -timeout 45m
        env:
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}